name: Release

on:
    release:
        types: [created]

jobs:
    release-binary:
        strategy:
            matrix:
                package: [mdbook-tabs, mdbook-trunk]
                include:
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: aarch64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: x86_64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest
                    - target: x86_64-apple-darwin
                      os: macos-latest
                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
        runs-on: ${{ matrix.os }}
        name: Release ${{ matrix.package }} for ${{ matrix.target }}
        steps:
            - uses: actions/checkout@v4

            - name: Set up Rust toolchain
              env:
                  TARGET: ${{ matrix.target }}
              run: rustup toolchain install stable --no-self-update --profile minimal --component rust-std-$TARGET

            - name: Set up Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
                  save-if: ${{ github.ref == 'refs/heads/main' }}

            - name: Build
              run: cargo build --bins --locked --release --target ${{ matrix.target }}

            - name: Archive (tar.gz)
              if: ${{ !contains(matrix.os, 'windows') }}
              run: tar czf ../../${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz ${{ matrix.package }}
              working-directory: target/${{ matrix.target }}/release

            - name: Archive (zip)
              if: ${{ contains(matrix.os, 'windows') }}
              run: 7z a ../../${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.target }}.zip ${{ matrix.package }}.exe
              working-directory: target/${{ matrix.target }}/release

            - name: Upload release asset (tar.gz)
              if: ${{ !contains(matrix.os, 'windows') }}
              uses: softprops/action-gh-release@v2
              with:
                  files: ${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz

            - name: Upload release asset (zip)
              if: ${{ contains(matrix.os, 'windows') }}
              uses: softprops/action-gh-release@v2
              with:
                  files: ${{ matrix.package }}-${{ github.ref_name }}-${{ matrix.target }}.zip
